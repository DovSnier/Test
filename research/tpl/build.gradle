apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.compile_sdk_version

    defaultConfig {

        minSdkVersion rootProject.ext.min_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version
        versionCode rootProject.ext.version_tpl_code
        versionName rootProject.ext.version_tpl_name

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation files('libs/Msc.jar')
    implementation files('libs/Sunflower.jar')
    implementation project(':framework:base')
    implementation project(':common:bean')

    implementation("com.jakewharton:butterknife:$rootProject.butterknife_version") {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-compat'
    }
    annotationProcessor("com.jakewharton:butterknife-compiler:$rootProject.butterknife_compiler_version") {
        transitive = false
    }
    implementation "com.github.bumptech.glide:glide:$rootProject.glide_version"
    implementation "org.xutils:xutils:${rootProject.xutils_version}"
//    implementation "org.greenrobot:greendao:$rootProject.greendao_version"
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okhttp3_version"
    implementation("com.facebook.stetho:stetho-okhttp3:$rootProject.stetho_okhttp3_version") {
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
    implementation "org.greenrobot:eventbus:$rootProject.eventbus_version"

    implementation("com.android.support:appcompat-v7:$rootProject.support_appcompat_version") {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
        exclude group: 'com.android.support', module: 'support-fragment'
        exclude group: 'com.android.support', module: 'support-vector-drawable'
        exclude group: 'com.android.support', module: 'animated-vector-drawable'
    }
    implementation "com.android.support:support-annotations:$rootProject.support_annotations_version"
    implementation("com.android.support.constraint:constraint-layout:$rootProject.support_constraint_layout_version") {
        exclude group: 'com.android.support.constraint', module: 'constraint-layout-solver'
    }

    testImplementation "junit:junit:$rootProject.junit_version"

    androidTestImplementation("com.android.support.test:runner:$rootProject.runner_version") {
        transitive = false
    }
    androidTestImplementation("com.android.support.test.espresso:espresso-core:$rootProject.espresso_core_version") {
        transitive = false
    }
}